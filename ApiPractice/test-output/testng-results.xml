<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="13015" started-at="2022-05-30T06:08:13Z" finished-at="2022-05-30T06:08:26Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="13015" started-at="2022-05-30T06:08:13Z" finished-at="2022-05-30T06:08:26Z">
      <class name="com.sedona.api.testcases.Functionality1">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.sedona.api.testcases.Functionality1@604ed9f0]" name="setUp" is-config="true" duration-ms="1366" started-at="2022-05-30T11:38:12Z" finished-at="2022-05-30T11:38:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="accountCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.sedona.api.testcases.Functionality1@604ed9f0]" name="accountCreation" duration-ms="9625" started-at="2022-05-30T11:38:14Z" data-provider="accountCreate" finished-at="2022-05-30T11:38:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Account list Create ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/api/policy/accounts/account]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{"entityId":1,"namedInsured":"Test","insuredType":"Organization","address1":"ABC COmpany","zipCode":"80510","formOfBusiness":"Association","state":"AZ","businessDescr":"Association"}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{"status":"success","message":"Account Created Successfully","data":{"quoteNumber":437671315}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountCreation -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.sedona.api.testcases.Functionality1@604ed9f0]" name="getResult" is-config="true" duration-ms="15" started-at="2022-05-30T11:38:24Z" finished-at="2022-05-30T11:38:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=accountCreation status=SUCCESS method=Functionality1.accountCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.sedona.api.testcases.Functionality1@604ed9f0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="accountCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.sedona.api.testcases.Functionality1@604ed9f0]" name="accountCreation" duration-ms="1616" started-at="2022-05-30T11:38:24Z" data-provider="accountCreate" finished-at="2022-05-30T11:38:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Account list Create with Empty Insurename ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/api/policy/accounts/account]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{"entityId":1,"namedInsured":" ","insuredType":"Organization","address1":"ABC COmpany","zipCode":"80510","formOfBusiness":"Association","state":"AZ","businessDescr":"Association"}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountCreation -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.sedona.api.testcases.Functionality1@604ed9f0]" name="getResult" is-config="true" duration-ms="1" started-at="2022-05-30T11:38:26Z" finished-at="2022-05-30T11:38:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=accountCreation status=SUCCESS method=Functionality1.accountCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.sedona.api.testcases.Functionality1@604ed9f0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="functionality1Test2()[pri:0, instance:com.sedona.api.testcases.Functionality1@604ed9f0]" name="functionality1Test2" duration-ms="3" started-at="2022-05-30T11:38:26Z" finished-at="2022-05-30T11:38:26Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [bandela] but found [kumar]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [bandela] but found [kumar]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at com.sedona.api.testcases.Functionality1.functionality1Test2(Functionality1.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- functionality1Test2 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.sedona.api.testcases.Functionality1@604ed9f0]" name="getResult" is-config="true" duration-ms="0" started-at="2022-05-30T11:38:26Z" finished-at="2022-05-30T11:38:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=functionality1Test2 status=FAILURE method=Functionality1.functionality1Test2()[pri:0, instance:com.sedona.api.testcases.Functionality1@604ed9f0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="functionality1Test3()[pri:0, instance:com.sedona.api.testcases.Functionality1@604ed9f0]" name="functionality1Test3" duration-ms="1" started-at="2022-05-30T11:38:26Z" finished-at="2022-05-30T11:38:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- functionality1Test3 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.sedona.api.testcases.Functionality1@604ed9f0]" name="getResult" is-config="true" duration-ms="0" started-at="2022-05-30T11:38:26Z" finished-at="2022-05-30T11:38:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=functionality1Test3 status=SUCCESS method=Functionality1.functionality1Test3()[pri:0, instance:com.sedona.api.testcases.Functionality1@604ed9f0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.sedona.api.testcases.Functionality1@604ed9f0]" name="tearDown" is-config="true" duration-ms="762" started-at="2022-05-30T11:38:27Z" finished-at="2022-05-30T11:38:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.sedona.api.testcases.Functionality1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
